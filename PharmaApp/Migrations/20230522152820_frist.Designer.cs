// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PharmaApp.Models;

namespace PharmaApp.Migrations
{
    [DbContext(typeof(PharmaContext))]
    [Migration("20230522152820_frist")]
    partial class frist
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PharmaApp.Models.Customer", b =>
                {
                    b.Property<int>("c_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("c_age")
                        .HasColumnType("int");

                    b.Property<string>("c_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("c_phno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("c_sex")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("c_id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("PharmaApp.Models.Medicines", b =>
                {
                    b.Property<int>("med_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("exp_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("med_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("mfg_date")
                        .HasColumnType("datetime2");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("rack")
                        .HasColumnType("int");

                    b.HasKey("med_id");

                    b.ToTable("Medicines");
                });

            modelBuilder.Entity("PharmaApp.Models.Purchase", b =>
                {
                    b.Property<int>("purchase_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("med_id")
                        .HasColumnType("int");

                    b.Property<double>("purchase_amt")
                        .HasColumnType("float");

                    b.Property<DateTime>("purchase_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("purchase_qty")
                        .HasColumnType("int");

                    b.Property<int>("sup_id")
                        .HasColumnType("int");

                    b.HasKey("purchase_id");

                    b.HasIndex("med_id");

                    b.HasIndex("sup_id");

                    b.ToTable("Purchase");
                });

            modelBuilder.Entity("PharmaApp.Models.Sales", b =>
                {
                    b.Property<int>("sale_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("c_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("date_time")
                        .HasColumnType("datetime2");

                    b.Property<int>("med_id")
                        .HasColumnType("int");

                    b.Property<double>("total_amt")
                        .HasColumnType("float");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("sale_id");

                    b.HasIndex("c_id");

                    b.HasIndex("med_id");

                    b.HasIndex("user_id");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("PharmaApp.Models.Supplier", b =>
                {
                    b.Property<int>("sup_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sup_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("sup_id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("PharmaApp.Models.Users", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PharmaApp.Models.Purchase", b =>
                {
                    b.HasOne("PharmaApp.Models.Medicines", "FK3")
                        .WithMany()
                        .HasForeignKey("med_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PharmaApp.Models.Supplier", "FK4")
                        .WithMany()
                        .HasForeignKey("sup_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FK3");

                    b.Navigation("FK4");
                });

            modelBuilder.Entity("PharmaApp.Models.Sales", b =>
                {
                    b.HasOne("PharmaApp.Models.Customer", "FK0")
                        .WithMany()
                        .HasForeignKey("c_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PharmaApp.Models.Medicines", "FK1")
                        .WithMany()
                        .HasForeignKey("med_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PharmaApp.Models.Users", "FK2")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FK0");

                    b.Navigation("FK1");

                    b.Navigation("FK2");
                });
#pragma warning restore 612, 618
        }
    }
}
